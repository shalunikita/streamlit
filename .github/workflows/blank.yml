# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: demoimg

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

   
    - name: Authenticate with Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
       credentials_json: ${{ secrets.GCP_SA_KEY }}
       project_id: ${{ secrets.GCP_PROJECT_ID }}
       export_environment_variables: true
       id_token_audience: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest . 

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |
          gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

    - name: Push Docker Image to Artifact Registry
      env:
       GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
         docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-test/$IMAGE_NAME:latest
         docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-test/$IMAGE_NAME:$GIT_TAG
         docker push us-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-test/$IMAGE_NAME:latest
         docker push us-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-test/$IMAGE_NAME:$GIT_TAG

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy pipelinetesting \
        --image us-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-test/demoimg:latest \
        --platform managed \
        --region us-west2  \
        --service-account my-cloud-run-service-account@leafy-antonym-413607.iam.gserviceaccount.com
